#Parametros de Sistema
network.package = NET-zib54/
file.name.links = Links.txt
file.name.nodes = Nodes.txt
file.name.servers = Servers.txt

file.name.vnfs.sfc = Vnfs/VnfsSFC.txt
file.name.vnfs.share = Vnfs/VnfsShare.txt
file.name.traffics = Traffics/traffics.txt
file.name.solution = Solutions/solutions.csv

#Cantidad de solicitudes en el trafico
number.traffic = 1000

#Cantidad de caminos mas cortos
k.shortest = 3

#Costo en dolares por CPU (Para la fragmentacion)
server.penalty.cpu.cost = 0.0001

#Costo en dolares por RAM (Para la fragmentacion)
server.penalty.ram.cost = 0.0002

#Costo en dolares por almacenamiento (Para la fragmentacion)
server.penalty.storage.cost = 0.0004

#Costo en dolares por ancho de banda (Para la fragmentacion)
link.penalty.bandwidth.cost = 0.0003

#Trafico
#Ancho de banda minimo y maximo para el trafico  !!! cite 470
traffic.bandwidth.min = 2
traffic.bandwidth.max = 5

#Porcentaje sobre el delay minimo de origen a destino del trafico
traffic.percentage.delay.max = 100

#Costo en dolares por falta de SLA minimo y maximo
traffic.penalty.slo.min = 1
traffic.penalty.slo.max = 2

#Cantidad de VNFs por trafico
traffic.sfc.min = 2
traffic.sfc.max = 4



#Vnf Random
#Tomar 100 (Solo en VnfServiceRandom)
number.solution = 100

#Numero de reintentos para encontrar una solucion factible (Solo en VnfServiceRandom)
retries.solution = 20

#true si los traficos se generan aleatoriamente y false si los traficos son all to all (Solo en VnfServiceRandom)
traffics.random = false

#false para generar traficos nuevos y true si se lee el archivo de traficos (Solo en VnfServiceRandom)
traffics.read.file = false
